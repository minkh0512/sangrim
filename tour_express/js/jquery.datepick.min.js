! function(e) {
    var t = "datepick";
    e.JQPlugin.createPlugin({
        name: t,
        defaultRenderer: {
            picker: '<div class="datepick"><div class="datepick-nav">{link:prev}{link:today}{link:next}</div>{months}{popup:start}<div class="datepick-ctrl">{link:clear}{link:close}</div>{popup:end}<div class="datepick-clear-fix"></div></div>',
            monthRow: '<div class="datepick-month-row">{months}</div>',
            month: '<div class="datepick-month"><div class="datepick-month-header">{monthHeader}</div><table><thead>{weekHeader}</thead><tbody>{weeks}</tbody></table></div>',
            weekHeader: "<tr>{days}</tr>",
            dayHeader: "<th>{day}</th>",
            week: "<tr>{days}</tr>",
            day: "<td>{day}</td>",
            monthSelector: ".datepick-month",
            daySelector: "td",
            rtlClass: "datepick-rtl",
            multiClass: "datepick-multi",
            defaultClass: "",
            selectedClass: "datepick-selected",
            highlightedClass: "datepick-highlight",
            todayClass: "datepick-today",
            startClass: "start",
            endClass: "end",
            middleClass: "middle",
            otherMonthClass: "datepick-other-month",
            saturdayClass: "",
            sundayClass: "",
            commandClass: "datepick-cmd",
            commandButtonClass: "",
            commandLinkClass: "",
            disabledClass: "datepick-disabled"
        },
        commands: {
            prev: {
                text: "prevText",
                status: "prevStatus",
                keystroke: {
                    keyCode: 33
                },
                enabled: function(e) {
                    var t = e.curMinDate();
                    return !t || a.add(a.day(a._applyMonthsOffset(a.add(a.newDate(e.drawDate), 1 - e.options.monthsToStep, "m"), e), 1), -1, "d").getTime() >= t.getTime()
                },
                date: function(e) {
                    return a.day(a._applyMonthsOffset(a.add(a.newDate(e.drawDate), -e.options.monthsToStep, "m"), e), 1)
                },
                action: function(e) {
                    a.changeMonth(this, -e.options.monthsToStep)
                }
            },
            prevJump: {
                text: "prevJumpText",
                status: "prevJumpStatus",
                keystroke: {
                    keyCode: 33,
                    ctrlKey: !0
                },
                enabled: function(e) {
                    var t = e.curMinDate();
                    return !t || a.add(a.day(a._applyMonthsOffset(a.add(a.newDate(e.drawDate), 1 - e.options.monthsToJump, "m"), e), 1), -1, "d").getTime() >= t.getTime()
                },
                date: function(e) {
                    return a.day(a._applyMonthsOffset(a.add(a.newDate(e.drawDate), -e.options.monthsToJump, "m"), e), 1)
                },
                action: function(e) {
                    a.changeMonth(this, -e.options.monthsToJump)
                }
            },
            next: {
                text: "nextText",
                status: "nextStatus",
                keystroke: {
                    keyCode: 34
                },
                enabled: function(e) {
                    var t = e.get("maxDate");
                    return !t || a.day(a._applyMonthsOffset(a.add(a.newDate(e.drawDate), e.options.monthsToStep, "m"), e), 1).getTime() <= t.getTime()
                },
                date: function(e) {
                    return a.day(a._applyMonthsOffset(a.add(a.newDate(e.drawDate), e.options.monthsToStep, "m"), e), 1)
                },
                action: function(e) {
                    a.changeMonth(this, e.options.monthsToStep)
                }
            },
            nextJump: {
                text: "nextJumpText",
                status: "nextJumpStatus",
                keystroke: {
                    keyCode: 34,
                    ctrlKey: !0
                },
                enabled: function(e) {
                    var t = e.get("maxDate");
                    return !t || a.day(a._applyMonthsOffset(a.add(a.newDate(e.drawDate), e.options.monthsToJump, "m"), e), 1).getTime() <= t.getTime()
                },
                date: function(e) {
                    return a.day(a._applyMonthsOffset(a.add(a.newDate(e.drawDate), e.options.monthsToJump, "m"), e), 1)
                },
                action: function(e) {
                    a.changeMonth(this, e.options.monthsToJump)
                }
            },
            current: {
                text: "currentText",
                status: "currentStatus",
                keystroke: {
                    keyCode: 36,
                    ctrlKey: !0
                },
                enabled: function(e) {
                    var t = e.curMinDate(),
                        s = e.get("maxDate"),
                        n = e.selectedDates[0] || a.today();
                    return (!t || n.getTime() >= t.getTime()) && (!s || n.getTime() <= s.getTime())
                },
                date: function(e) {
                    return e.selectedDates[0] || a.today()
                },
                action: function(e) {
                    var t = e.selectedDates[0] || a.today();
                    a.showMonth(this, t.getFullYear(), t.getMonth() + 1)
                }
            },
            today: {
                text: "todayText",
                status: "todayStatus",
                keystroke: {
                    keyCode: 36,
                    ctrlKey: !0
                },
                enabled: function(e) {
                    var t = e.curMinDate(),
                        s = e.get("maxDate");
                    return (!t || a.today().getTime() >= t.getTime()) && (!s || a.today().getTime() <= s.getTime())
                },
                date: function(e) {
                    return a.today()
                },
                action: function(e) {
                    a.showMonth(this)
                }
            },
            clear: {
                text: "clearText",
                status: "clearStatus",
                keystroke: {
                    keyCode: 35,
                    ctrlKey: !0
                },
                enabled: function(e) {
                    return !0
                },
                date: function(e) {
                    return null
                },
                action: function(e) {
                    a.clear(this)
                }
            },
            close: {
                text: "closeText",
                status: "closeStatus",
                keystroke: {
                    keyCode: 27
                },
                enabled: function(e) {
                    return !0
                },
                date: function(e) {
                    return null
                },
                action: function(e) {
                    a.hide(this)
                }
            },
            prevWeek: {
                text: "prevWeekText",
                status: "prevWeekStatus",
                keystroke: {
                    keyCode: 38,
                    ctrlKey: !0
                },
                enabled: function(e) {
                    var t = e.curMinDate();
                    return !t || a.add(a.newDate(e.drawDate), -7, "d").getTime() >= t.getTime()
                },
                date: function(e) {
                    return a.add(a.newDate(e.drawDate), -7, "d")
                },
                action: function(e) {
                    a.changeDay(this, -7)
                }
            },
            prevDay: {
                text: "prevDayText",
                status: "prevDayStatus",
                keystroke: {
                    keyCode: 37,
                    ctrlKey: !0
                },
                enabled: function(e) {
                    var t = e.curMinDate();
                    return !t || a.add(a.newDate(e.drawDate), -1, "d").getTime() >= t.getTime()
                },
                date: function(e) {
                    return a.add(a.newDate(e.drawDate), -1, "d")
                },
                action: function(e) {
                    a.changeDay(this, -1)
                }
            },
            nextDay: {
                text: "nextDayText",
                status: "nextDayStatus",
                keystroke: {
                    keyCode: 39,
                    ctrlKey: !0
                },
                enabled: function(e) {
                    var t = e.get("maxDate");
                    return !t || a.add(a.newDate(e.drawDate), 1, "d").getTime() <= t.getTime()
                },
                date: function(e) {
                    return a.add(a.newDate(e.drawDate), 1, "d")
                },
                action: function(e) {
                    a.changeDay(this, 1)
                }
            },
            nextWeek: {
                text: "nextWeekText",
                status: "nextWeekStatus",
                keystroke: {
                    keyCode: 40,
                    ctrlKey: !0
                },
                enabled: function(e) {
                    var t = e.get("maxDate");
                    return !t || a.add(a.newDate(e.drawDate), 7, "d").getTime() <= t.getTime()
                },
                date: function(e) {
                    return a.add(a.newDate(e.drawDate), 7, "d")
                },
                action: function(e) {
                    a.changeDay(this, 7)
                }
            }
        },
        defaultOptions: {
            pickerClass: "",
            showOnFocus: !0,
            showTrigger: null,
            showAnim: "show",
            showOptions: {},
            showSpeed: "normal",
            popupContainer: null,
            alignment: "bottom",
            fixedWeeks: !1,
            firstDay: 0,
            calculateWeek: null,
            monthsToShow: 1,
            monthsOffset: 0,
            monthsToStep: 1,
            monthsToJump: 12,
            useMouseWheel: !0,
            changeMonth: !0,
            yearRange: "c-10:c+10",
            shortYearCutoff: "+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            defaultDate: null,
            selectDefaultDate: !1,
            minDate: null,
            maxDate: null,
            dateFormat: "mm/dd/yyyy",
            autoSize: !1,
            rangeSelect: !1,
            rangeSeparator: " - ",
            multiSelect: 0,
            multiSeparator: ",",
            onDate: null,
            onShow: null,
            onChangeMonthYear: null,
            onSelect: null,
            onClose: null,
            altField: null,
            altFormat: null,
            constrainInput: !0,
            commandsAsDateFormat: !1,
            platForm: null,
            commands: {}
        },
        regionalOptions: {
            "": {
                monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                monthNamesShort: ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
                dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                dayNamesMin: ["일", "월", "화", "수", "목", "금", "토"],
                dateFormat: "mm/dd/yyyy",
                firstDay: 0,
                renderer: {},
                prevText: "prev",
                prevStatus: "Show the previous month",
                prevJumpText: "&lt;&lt;",
                prevJumpStatus: "Show the previous year",
                nextText: "next",
                nextStatus: "Show the next month",
                nextJumpText: "&gt;&gt;",
                nextJumpStatus: "Show the next year",
                currentText: "Current",
                currentStatus: "Show the current month",
                todayText: "Today",
                todayStatus: "Show today's month",
                clearText: "Clear",
                clearStatus: "Clear all the dates",
                closeText: "Close",
                closeStatus: "Close the datepicker",
                yearStatus: "Change the year",
                earlierText: "&#160;&#160;▲",
                laterText: "&#160;&#160;▼",
                monthStatus: "Change the month",
                weekText: "Wk",
                weekStatus: "Week of the year",
                dayStatus: "Select DD, M d, yyyy",
                defaultStatus: "Select a date",
                isRTL: !1
            }
        },
        _getters: ["getDate", "isDisabled", "isSelectable", "retrieveDate"],
        _disabled: [],
        _popupClass: t + "-popup",
        _triggerClass: t + "-trigger",
        _disableClass: t + "-disable",
        _monthYearClass: t + "-month-year",
        _curMonthClass: t + "-month-",
        _anyYearClass: t + "-any-year",
        _curDoWClass: t + "-dow-",
        _ticksTo1970: 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 60 * 60 * 1e7,
        _msPerDay: 864e5,
        ATOM: "yyyy-mm-dd",
        COOKIE: "D, dd M yyyy",
        FULL: "DD, MM d, yyyy",
        ISO_8601: "yyyy-mm-dd",
        JULIAN: "J",
        RFC_822: "D, d M yy",
        RFC_850: "DD, dd-M-yy",
        RFC_1036: "D, d M yy",
        RFC_1123: "D, d M yyyy",
        RFC_2822: "D, d M yyyy",
        RSS: "D, d M yy",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yyyy-mm-dd",
        formatDate: function(e, t, a) {
            if ("string" != typeof e && (a = t, t = e, e = ""), !t) return "";
            e = e || this.defaultOptions.dateFormat, a = a || {};
            for (var s = a.dayNamesShort || this.defaultOptions.dayNamesShort, n = a.dayNames || this.defaultOptions.dayNames, o = a.monthNamesShort || this.defaultOptions.monthNamesShort, i = a.monthNames || this.defaultOptions.monthNames, r = a.calculateWeek || this.defaultOptions.calculateWeek, l = function(t, a) {
                    for (var s = 1; p + s < e.length && e.charAt(p + s) === t;) s++;
                    return p += s - 1, Math.floor(s / (a || 1)) > 1
                }, d = function(e, t, a, s) {
                    var n = "" + t;
                    if (l(e, s))
                        for (; n.length < a;) n = "0" + n;
                    return n
                }, c = function(e, t, a, s) {
                    return l(e) ? s[t] : a[t]
                }, h = "", u = !1, p = 0; p < e.length; p++)
                if (u) "'" !== e.charAt(p) || l("'") ? h += e.charAt(p) : u = !1;
                else switch (e.charAt(p)) {
                    case "d":
                        h += d("d", t.getDate(), 2);
                        break;
                    case "D":
                        h += c("D", t.getDay(), s, n);
                        break;
                    case "o":
                        h += d("o", this.dayOfYear(t), 3);
                        break;
                    case "w":
                        h += d("w", r(t), 2);
                        break;
                    case "m":
                        h += d("m", t.getMonth() + 1, 2);
                        break;
                    case "M":
                        h += c("M", t.getMonth(), o, i);
                        break;
                    case "y":
                        h += l("y", 2) ? t.getFullYear() : (t.getFullYear() % 100 < 10 ? "0" : "") + t.getFullYear() % 100;
                        break;
                    case "@":
                        h += Math.floor(t.getTime() / 1e3);
                        break;
                    case "!":
                        h += 1e4 * t.getTime() + this._ticksTo1970;
                        break;
                    case "'":
                        l("'") ? h += "'" : u = !0;
                        break;
                    default:
                        h += e.charAt(p)
                }
            return h
        },
        parseDate: function(e, t, a) {
            if (null == t) throw "Invalid arguments";
            if (t = "object" == typeof t ? t.toString() : t + "", "" === t) return null;
            e = e || this.defaultOptions.dateFormat, a = a || {};
            var s = a.shortYearCutoff || this.defaultOptions.shortYearCutoff;
            s = "string" != typeof s ? s : this.today().getFullYear() % 100 + parseInt(s, 10);
            for (var n = a.dayNamesShort || this.defaultOptions.dayNamesShort, o = a.dayNames || this.defaultOptions.dayNames, i = a.monthNamesShort || this.defaultOptions.monthNamesShort, r = a.monthNames || this.defaultOptions.monthNames, l = -1, d = -1, c = -1, h = -1, u = !1, p = !1, m = function(t, a) {
                    for (var s = 1; v + s < e.length && e.charAt(v + s) === t;) s++;
                    return v += s - 1, Math.floor(s / (a || 1)) > 1
                }, g = function(e, a) {
                    var s = m(e, a),
                        n = [2, 3, s ? 4 : 2, 11, 20]["oy@!".indexOf(e) + 1],
                        o = new RegExp("^-?\\d{1," + n + "}"),
                        i = t.substring(D).match(o);
                    if (!i) throw "Missing number at position {0}".replace(/\{0\}/, D);
                    return D += i[0].length, parseInt(i[0], 10)
                }, f = function(e, a, s, n) {
                    for (var o = m(e, n) ? s : a, i = 0; i < o.length; i++)
                        if (t.substr(D, o[i].length).toLowerCase() === o[i].toLowerCase()) return D += o[i].length, i + 1;
                    throw "Unknown name at position {0}".replace(/\{0\}/, D)
                }, y = function() {
                    if (t.charAt(D) !== e.charAt(v)) throw "Unexpected literal at position {0}".replace(/\{0\}/, D);
                    D++
                }, D = 0, v = 0; v < e.length; v++)
                if (p) "'" !== e.charAt(v) || m("'") ? y() : p = !1;
                else switch (e.charAt(v)) {
                    case "d":
                        c = g("d");
                        break;
                    case "D":
                        f("D", n, o);
                        break;
                    case "o":
                        h = g("o");
                        break;
                    case "w":
                        g("w");
                        break;
                    case "m":
                        d = g("m");
                        break;
                    case "M":
                        d = f("M", i, r);
                        break;
                    case "y":
                        var w = v;
                        u = !m("y", 2), v = w, l = g("y", 2);
                        break;
                    case "@":
                        var k = this._normaliseDate(new Date(1e3 * g("@")));
                        l = k.getFullYear(), d = k.getMonth() + 1, c = k.getDate();
                        break;
                    case "!":
                        var k = this._normaliseDate(new Date((g("!") - this._ticksTo1970) / 1e4));
                        l = k.getFullYear(), d = k.getMonth() + 1, c = k.getDate();
                        break;
                    case "*":
                        D = t.length;
                        break;
                    case "'":
                        m("'") ? y() : p = !0;
                        break;
                    default:
                        y()
                }
            if (D < t.length) throw "Additional text found at end";
            if (-1 === l ? l = this.today().getFullYear() : 100 > l && u && (l += -1 === s ? 1900 : this.today().getFullYear() - this.today().getFullYear() % 100 - (s >= l ? 0 : 100)), h > -1) {
                d = 1, c = h;
                for (var _ = this.daysInMonth(l, d); c > _; _ = this.daysInMonth(l, d)) d++, c -= _
            }
            var k = this.newDate(l, d, c);
            if (k.getFullYear() !== l || k.getMonth() + 1 !== d || k.getDate() !== c) throw "Invalid date";
            return k
        },
        determineDate: function(e, t, s, n, o) {
            s && "object" != typeof s && (o = n, n = s, s = null), "string" != typeof n && (o = n, n = "");
            var i = function(e) {
                try {
                    return a.parseDate(n, e, o)
                } catch (t) {}
                e = e.toLowerCase();
                for (var i = (e.match(/^c/) && s ? a.newDate(s) : null) || a.today(), r = /([+-]?[0-9]+)\s*(d|w|m|y)?/g, l = null; l = r.exec(e);) i = a.add(i, parseInt(l[1], 10), l[2] || "d");
                return i
            };
            return t = t ? a.newDate(t) : null, e = null == e ? t : "string" == typeof e ? i(e) : "number" == typeof e ? isNaN(e) || e === 1 / 0 || e === -(1 / 0) ? t : a.add(a.today(), e, "d") : a.newDate(e)
        },
        daysInMonth: function(e, t) {
            return t = e.getFullYear ? e.getMonth() + 1 : t, e = e.getFullYear ? e.getFullYear() : e, this.newDate(e, t + 1, 0).getDate()
        },
        dayOfYear: function(e, t, s) {
            var n = e.getFullYear ? e : a.newDate(e, t, s),
                o = a.newDate(n.getFullYear(), 1, 1);
            return Math.floor((n.getTime() - o.getTime()) / a._msPerDay) + 1
        },
        iso8601Week: function(e, t, s) {
            var n = e.getFullYear ? new Date(e.getTime()) : a.newDate(e, t, s);
            n.setDate(n.getDate() + 4 - (n.getDay() || 7));
            var o = n.getTime();
            return n.setMonth(0, 1), Math.floor(Math.round((o - n) / a._msPerDay) / 7) + 1
        },
        today: function() {
            return this._normaliseDate(new Date)
        },
        newDate: function(e, t, a) {
            return e ? e.getFullYear ? this._normaliseDate(new Date(e.getTime())) : new Date(e, t - 1, a, 12) : null
        },
        _normaliseDate: function(e) {
            return e && e.setHours(12, 0, 0, 0), e
        },
        year: function(e, t) {
            return e.setFullYear(t), this._normaliseDate(e)
        },
        month: function(e, t) {
            return e.setMonth(t - 1), this._normaliseDate(e)
        },
        day: function(e, t) {
            return e.setDate(t), this._normaliseDate(e)
        },
        add: function(e, t, s) {
            if ("d" === s || "w" === s) this._normaliseDate(e), e.setDate(e.getDate() + t * ("w" === s ? 7 : 1));
            else {
                var n = e.getFullYear() + ("y" === s ? t : 0),
                    o = e.getMonth() + ("m" === s ? t : 0);
                e.setTime(a.newDate(n, o + 1, Math.min(e.getDate(), this.daysInMonth(n, o + 1))).getTime())
            }
            return e
        },
        _applyMonthsOffset: function(t, s) {
            var n = s.options.monthsOffset;
            return e.isFunction(n) && (n = n.apply(s.elem[0], [t])), a.add(t, -n, "m")
        },
        _init: function() {
            this.defaultOptions.commands = this.commands, this.defaultOptions.calculateWeek = this.iso8601Week, this.regionalOptions[""].renderer = this.defaultRenderer, this._super()
        },
        _instSettings: function(t, s) {
            return {
                selectedDates: [],
                drawDate: null,
                pickingRange: !1,
                inline: e.inArray(t[0].nodeName.toLowerCase(), ["div", "span"]) > -1,
                get: function(t) {
                    return e.inArray(t, ["defaultDate", "minDate", "maxDate"]) > -1 ? a.determineDate(this.options[t], null, this.selectedDates[0], this.options.dateFormat, this.getConfig()) : this.options[t]
                },
                curMinDate: function() {
                    return this.pickingRange ? this.selectedDates[0] : this.get("minDate")
                },
                getConfig: function() {
                    return {
                        dayNamesShort: this.options.dayNamesShort,
                        dayNames: this.options.dayNames,
                        monthNamesShort: this.options.monthNamesShort,
                        monthNames: this.options.monthNames,
                        calculateWeek: this.options.calculateWeek,
                        shortYearCutoff: this.options.shortYearCutoff
                    }
                }
            }
        },
        _postAttach: function(t, s) {
            s.inline ? (s.drawDate = a._checkMinMax(a.newDate(s.selectedDates[0] || s.get("defaultDate") || a.today()), s), s.prevDate = a.newDate(s.drawDate), this._update(t[0]), e.fn.mousewheel && t.mousewheel(this._doMouseWheel)) : (this._attachments(t, s), t.on("keydown." + s.name, this._keyDown).on("keypress." + s.name, this._keyPress).on("keyup." + s.name, this._keyUp), t.attr("disabled") && this.disable(t[0]))
        },
        _optionsChanged: function(t, s, n) {
            if (n.calendar && n.calendar !== s.options.calendar) {
                var o = function(e) {
                    return "object" == typeof s.options[e] ? null : s.options[e]
                };
                n = e.extend({
                    defaultDate: o("defaultDate"),
                    minDate: o("minDate"),
                    maxDate: o("maxDate")
                }, n), s.selectedDates = [], s.drawDate = null
            }
            var i = s.selectedDates;
            e.extend(s.options, n), this.setDate(t[0], i, null, !1, !0), s.pickingRange = !1, s.drawDate = a.newDate(this._checkMinMax((s.options.defaultDate ? s.get("defaultDate") : s.drawDate) || s.get("defaultDate") || a.today(), s)), s.inline || this._attachments(t, s), (s.inline || s.div) && this._update(t[0])
        },
        _attachments: function(t, s) {
            t.off("focus." + s.name), s.options.showOnFocus && t.on("focus." + s.name, this.show), s.trigger && s.trigger.remove();
            var n = s.options.showTrigger;
            s.trigger = n ? e(n).clone().removeAttr("id").addClass(this._triggerClass)[s.options.isRTL ? "insertBefore" : "insertAfter"](t).click(function() {
                a.isDisabled(t[0]) || a[a.curInst === s ? "hide" : "show"](t[0])
            }) : e([]), this._autoSize(t, s);
            var o = this._extractDates(s, t.val());
            o && this.setDate(t[0], o, null, !0);
            var i = s.get("defaultDate");
            s.options.selectDefaultDate && i && 0 === s.selectedDates.length && this.setDate(t[0], a.newDate(i || a.today()))
        },
        _autoSize: function(e, t) {
            if (t.options.autoSize && !t.inline) {
                var s = a.newDate(2009, 10, 20),
                    n = t.options.dateFormat;
                if (n.match(/[DM]/)) {
                    var o = function(e) {
                        for (var t = 0, a = 0, s = 0; s < e.length; s++) e[s].length > t && (t = e[s].length, a = s);
                        return a
                    };
                    s.setMonth(o(t.options[n.match(/MM/) ? "monthNames" : "monthNamesShort"])), s.setDate(o(t.options[n.match(/DD/) ? "dayNames" : "dayNamesShort"]) + 20 - s.getDay())
                }
                t.elem.attr("size", a.formatDate(n, s, t.getConfig()).length)
            }
        },
        _preDestroy: function(t, a) {
            a.trigger && a.trigger.remove(), t.empty().off("." + a.name), a.inline && e.fn.mousewheel && t.unmousewheel(), !a.inline && a.options.autoSize && t.removeAttr("size")
        },
        multipleEvents: function(e) {
            var t = arguments;
            return function(e) {
                for (var a = 0; a < t.length; a++) t[a].apply(this, arguments)
            }
        },
        enable: function(t) {
            if (t = e(t), t.hasClass(this._getMarker())) {
                var a = this._getInst(t);
                a.inline ? t.children("." + this._disableClass).remove().end().find("button,select").prop("disabled", !1).end().find("a").attr("href", "javascript:void(0)") : (t.prop("disabled", !1), a.trigger.filter("button." + this._triggerClass).prop("disabled", !1).end().filter("img." + this._triggerClass).css({
                    opacity: "1.0",
                    cursor: ""
                })), this._disabled = e.map(this._disabled, function(e) {
                    return e === t[0] ? null : e
                })
            }
        },
        disable: function(t) {
            if (t = e(t), t.hasClass(this._getMarker())) {
                var a = this._getInst(t);
                if (a.inline) {
                    var s = t.children(":last"),
                        n = s.offset(),
                        o = {
                            left: 0,
                            top: 0
                        };
                    s.parents().each(function() {
                        return "relative" === e(this).css("position") ? (o = e(this).offset(), !1) : void 0
                    });
                    var i = t.css("zIndex");
                    i = ("auto" === i ? 0 : parseInt(i, 10)) + 1, t.prepend('<div class="' + this._disableClass + '" style="width: ' + s.outerWidth() + "px; height: " + s.outerHeight() + "px; left: " + (n.left - o.left) + "px; top: " + (n.top - o.top) + "px; z-index: " + i + '"></div>').find("button,select").prop("disabled", !0).end().find("a").removeAttr("href")
                } else t.prop("disabled", !0), a.trigger.filter("button." + this._triggerClass).prop("disabled", !0).end().filter("img." + this._triggerClass).css({
                    opacity: "0.5",
                    cursor: "default"
                });
                this._disabled = e.map(this._disabled, function(e) {
                    return e === t[0] ? null : e
                }), this._disabled.push(t[0])
            }
        },
        isDisabled: function(t) {
            return t && e.inArray(t, this._disabled) > -1
        },
        show: function(t) {
            t = e(t.target || t);
            var s = a._getInst(t);
            if (a.curInst !== s && (a.curInst && a.hide(a.curInst, !0), !e.isEmptyObject(s))) {
                s.lastVal = null, s.selectedDates = a._extractDates(s, t.val()), s.pickingRange = !1, s.drawDate = a._checkMinMax(a.newDate(s.selectedDates[0] || s.get("defaultDate") || a.today()), s), s.prevDate = a.newDate(s.drawDate), a.curInst = s, a._update(t[0], !0);
                var n = a._checkOffset(s);
                s.div.css({
                    left: n.left,
                    top: n.top
                });
                var o = s.options.showAnim,
                    i = s.options.showSpeed;
                if (i = "normal" === i && e.ui && parseInt(e.ui.version.substring(2)) >= 8 ? "_default" : i, e.effects && (e.effects[o] || e.effects.effect && e.effects.effect[o])) {
                    var r = s.div.data();
                    for (var l in r) l.match(/^ec\.storage\./) && (r[l] = s._mainDiv.css(l.replace(/ec\.storage\./, "")));
                    s.div.data(r).show(o, s.options.showOptions, i)
                } else s.div[o || "show"](o ? i : 0)
            }
        },
        _extractDates: function(e, t) {
            if (t !== e.lastVal) {
                e.lastVal = t, t = t.split(e.options.multiSelect ? e.options.multiSeparator : e.options.rangeSelect ? e.options.rangeSeparator : "\x00");
                for (var s = [], n = 0; n < t.length; n++) try {
                    var o = a.parseDate(e.options.dateFormat, t[n], e.getConfig());
                    if (o) {
                        for (var i = !1, r = 0; r < s.length; r++)
                            if (s[r].getTime() === o.getTime()) {
                                i = !0;
                                break
                            } i || s.push(o)
                    }
                } catch (l) {}
                return s.splice(e.options.multiSelect || (e.options.rangeSelect ? 2 : 1), s.length), e.options.rangeSelect && 1 === s.length && (s[1] = s[0]), s
            }
        },
        _update: function(t, s) {
            t = e(t.target || t);
            var n = a._getInst(t);
            e.isEmptyObject(n) || ((n.inline || a.curInst === n) && (!e.isFunction(n.options.onChangeMonthYear) || n.prevDate && n.prevDate.getFullYear() === n.drawDate.getFullYear() && n.prevDate.getMonth() === n.drawDate.getMonth() || n.options.onChangeMonthYear.apply(t[0], [n.drawDate.getFullYear(), n.drawDate.getMonth() + 1])), n.inline ? t.html(this._generateContent(t[0], n)) : a.curInst === n && (n.div || (n.div = e("<div></div>").addClass(this._popupClass).css({
                display: s ? "none" : "static",
                position: "absolute",
                left: t.offset().left,
                top: t.offset().top + t.outerHeight()
            }).appendTo(e(n.options.popupContainer || "body")), e.fn.mousewheel && n.div.mousewheel(this._doMouseWheel)), n.div.html(this._generateContent(t[0], n))))
        },
        _updateInput: function(t, s) {
            var n = this._getInst(t);
            if (!e.isEmptyObject(n)) {
                for (var o = "", i = "", r = n.options.multiSelect ? n.options.multiSeparator : n.options.rangeSeparator, l = n.options.altFormat || n.options.dateFormat, d = 0; d < n.selectedDates.length; d++) o += s ? "" : (d > 0 ? r : "") + a.formatDate(n.options.dateFormat, n.selectedDates[d], n.getConfig()), i += (d > 0 ? r : "") + a.formatDate(l, n.selectedDates[d], n.getConfig());
                n.inline || s || e(t).val(o), e(n.options.altField).val(i), !e.isFunction(n.options.onSelect) || s || n.inSelect || (n.inSelect = !0, n.options.onSelect.apply(t, [n.selectedDates]), n.inSelect = !1)
            }
        },
        _getBorders: function(e) {
            var t = function(e) {
                return {
                    thin: 1,
                    medium: 3,
                    thick: 5
                } [e] || e
            };
            return [parseFloat(t(e.css("border-left-width"))), parseFloat(t(e.css("border-top-width")))]
        },
        _checkOffset: function(t) {
            var a = t.elem.is(":hidden") && t.trigger ? t.trigger : t.elem,
                s = a.offset(),
                n = e(window).width(),
                o = e(window).height();
            if (0 === n) return s;
            var i = !1;
            e(t.elem).parents().each(function() {
                return i |= "fixed" === e(this).css("position"), !i
            });
            var r = document.documentElement.scrollLeft || document.body.scrollLeft,
                l = document.documentElement.scrollTop || document.body.scrollTop,
                d = s.top - (i ? l : 0) - t.div.outerHeight(),
                c = s.top - (i ? l : 0) + a.outerHeight(),
                h = s.left - (i ? r : 0),
                u = s.left - (i ? r : 0) + a.outerWidth() - t.div.outerWidth(),
                p = s.left - r + t.div.outerWidth() > n,
                m = s.top - l + t.elem.outerHeight() + t.div.outerHeight() > o;
            t.div.css("position", i ? "fixed" : "absolute");
            var g = t.options.alignment;
            return s = "topLeft" === g ? {
                left: h,
                top: d
            } : "topRight" === g ? {
                left: u,
                top: d
            } : "bottomLeft" === g ? {
                left: h,
                top: c
            } : "bottomRight" === g ? {
                left: u,
                top: c
            } : "top" === g ? {
                left: t.options.isRTL || p ? u : h,
                top: d
            } : {
                left: t.options.isRTL || p ? u : h,
                top: m ? d : c
            }, s.left = Math.max(i ? 0 : r, s.left), s.top = Math.max(i ? 0 : l, s.top), s
        },
        _checkExternalClick: function(t) {
            if (a.curInst) {
                var s = e(t.target);
                0 !== s.closest("." + a._popupClass + ",." + a._triggerClass).length || s.hasClass(a._getMarker()) || a.hide(a.curInst)
            }
        },
        hide: function(t, s) {
            if (t) {
                var n = this._getInst(t);
                if (e.isEmptyObject(n) && (n = t), n && n === a.curInst) {
                    var o = s ? "" : n.options.showAnim,
                        i = n.options.showSpeed;
                    i = "normal" === i && e.ui && parseInt(e.ui.version.substring(2)) >= 8 ? "_default" : i;
                    var r = function() {
                        n.div && (n.div.remove(), n.div = null, a.curInst = null, e.isFunction(n.options.onClose) && n.options.onClose.apply(t, [n.selectedDates]))
                    };
                    if (n.div.stop(), e.effects && (e.effects[o] || e.effects.effect && e.effects.effect[o])) n.div.hide(o, n.options.showOptions, i, r);
                    else {
                        var l = "slideDown" === o ? "slideUp" : "fadeIn" === o ? "fadeOut" : "hide";
                        n.div[l](o ? i : "", r)
                    }
                    o || r()
                }
            }
        },
        _keyDown: function(t) {
            var s = t.data && t.data.elem || t.target,
                n = a._getInst(s),
                o = !1;
            if (n.inline || n.div)
                if (9 === t.keyCode) a.hide(s);
                else if (13 === t.keyCode) a.selectDate(s, e("a." + n.options.renderer.highlightedClass, n.div)[0]), o = !0;
            else {
                var i = n.options.commands;
                for (var r in i) {
                    var l = i[r];
                    if (l.keystroke.keyCode === t.keyCode && !!l.keystroke.ctrlKey == !(!t.ctrlKey && !t.metaKey) && !!l.keystroke.altKey === t.altKey && !!l.keystroke.shiftKey === t.shiftKey) {
                        a.performAction(s, r), o = !0;
                        break
                    }
                }
            } else {
                var l = n.options.commands.current;
                l.keystroke.keyCode === t.keyCode && !!l.keystroke.ctrlKey == !(!t.ctrlKey && !t.metaKey) && !!l.keystroke.altKey === t.altKey && !!l.keystroke.shiftKey === t.shiftKey && (a.show(s), o = !0)
            }
            return n.ctrlKey = t.keyCode < 48 && 32 !== t.keyCode || t.ctrlKey || t.metaKey, o && (t.preventDefault(), t.stopPropagation()), !o
        },
        _keyPress: function(t) {
            var s = a._getInst(t.data && t.data.elem || t.target);
            if (!e.isEmptyObject(s) && s.options.constrainInput) {
                var n = String.fromCharCode(t.keyCode || t.charCode),
                    o = a._allowedChars(s);
                return t.metaKey || s.ctrlKey || " " > n || !o || o.indexOf(n) > -1
            }
            return !0
        },
        _allowedChars: function(e) {
            for (var t = e.options.multiSelect ? e.options.multiSeparator : e.options.rangeSelect ? e.options.rangeSeparator : "", a = !1, s = !1, n = e.options.dateFormat, o = 0; o < n.length; o++) {
                var i = n.charAt(o);
                if (a) "'" === i && "'" !== n.charAt(o + 1) ? a = !1 : t += i;
                else switch (i) {
                    case "d":
                    case "m":
                    case "o":
                    case "w":
                        t += s ? "" : "0123456789", s = !0;
                        break;
                    case "y":
                    case "@":
                    case "!":
                        t += (s ? "" : "0123456789") + "-", s = !0;
                        break;
                    case "J":
                        t += (s ? "" : "0123456789") + "-.", s = !0;
                        break;
                    case "D":
                    case "M":
                    case "Y":
                        return null;
                    case "'":
                        "'" === n.charAt(o + 1) ? t += "'" : a = !0;
                        break;
                    default:
                        t += i
                }
            }
            return t
        },
        _keyUp: function(t) {
            var s = t.data && t.data.elem || t.target,
                n = a._getInst(s);
            if (!e.isEmptyObject(n) && !n.ctrlKey && n.lastVal !== n.elem.val()) try {
                var o = a._extractDates(n, n.elem.val());
                o.length > 0 && a.setDate(s, o, null, !0)
            } catch (t) {}
            return !0
        },
        _doMouseWheel: function(t, s) {
            var n = a.curInst && a.curInst.elem[0] || e(t.target).closest("." + a._getMarker())[0];
            if (!a.isDisabled(n)) {
                var o = a._getInst(n);
                o.options.useMouseWheel && (s = 0 > s ? -1 : 1, a.changeMonth(n, -o.options[t.ctrlKey ? "monthsToJump" : "monthsToStep"] * s)), t.preventDefault()
            }
        },
        clear: function(t) {
            var s = this._getInst(t);
            if (!e.isEmptyObject(s)) {
                s.selectedDates = [], this.hide(t);
                var n = s.get("defaultDate");
                s.options.selectDefaultDate && n ? this.setDate(t, a.newDate(n || a.today())) : this._updateInput(t)
            }
        },
        getDate: function(t) {
            var a = this._getInst(t);
            return e.isEmptyObject(a) ? [] : a.selectedDates
        },
        setDate: function(t, s, n, o, i) {
            var r = this._getInst(t);
            if (!e.isEmptyObject(r)) {
                e.isArray(s) || (s = [s], n && s.push(n));
                var l = r.get("minDate"),
                    d = r.get("maxDate"),
                    c = r.selectedDates[0];
                r.selectedDates = [];
                for (var h = 0; h < s.length; h++) {
                    var u = a.determineDate(s[h], null, c, r.options.dateFormat, r.getConfig());
                    u && (!l || u.getTime() >= l.getTime()) && (!d || u.getTime() <= d.getTime()) && r.selectedDates.push(u)
                }
                if (r.selectedDates.splice(r.options.multiSelect || (r.options.rangeSelect ? 2 : 1), r.selectedDates.length), r.options.rangeSelect) {
                    switch (r.selectedDates.length) {
                        case 1:
                            r.selectedDates[1] = r.selectedDates[0];
                            break;
                        case 2:
                            r.selectedDates[1] = r.selectedDates[0].getTime() > r.selectedDates[1].getTime() ? r.selectedDates[0] : r.selectedDates[1]
                    }
                    r.pickingRange = !1
                }
                r.prevDate = r.drawDate ? a.newDate(r.drawDate) : null, r.drawDate = this._checkMinMax(a.newDate(r.selectedDates[0] || r.get("defaultDate") || a.today()), r), i || (this._update(t), this._updateInput(t, o))
            }
        },
        isSelectable: function(t, s) {
            var n = this._getInst(t);
            return e.isEmptyObject(n) ? !1 : (s = a.determineDate(s, n.selectedDates[0] || this.today(), null, n.options.dateFormat, n.getConfig()), this._isSelectable(t, s, n.options.onDate, n.get("minDate"), n.get("maxDate")))
        },
        _isSelectable: function(t, a, s, n, o) {
            var i = "boolean" == typeof s ? {
                selectable: s
            } : e.isFunction(s) ? s.apply(t, [a, !0]) : {};
            return i.selectable !== !1 && (!n || a.getTime() >= n.getTime()) && (!o || a.getTime() <= o.getTime())
        },
        performAction: function(t, a) {
            var s = this._getInst(t);
            if (!e.isEmptyObject(s) && !this.isDisabled(t)) {
                var n = s.options.commands;
                n[a] && n[a].enabled.apply(t, [s]) && n[a].action.apply(t, [s])
            }
        },
        showMonth: function(t, s, n, o) {
            var i = this._getInst(t);
            if (!e.isEmptyObject(i) && (null != o || i.drawDate.getFullYear() !== s || i.drawDate.getMonth() + 1 !== n)) {
                i.prevDate = a.newDate(i.drawDate);
                var r = this._checkMinMax(null != s ? a.newDate(s, n, 1) : a.today(), i);
                i.drawDate = a.newDate(r.getFullYear(), r.getMonth() + 1, null != o ? o : Math.min(i.drawDate.getDate(), a.daysInMonth(r.getFullYear(), r.getMonth() + 1))), this._update(t)
            }
        },
        changeMonth: function(t, s) {
            var n = this._getInst(t);
            if (!e.isEmptyObject(n)) {
                var o = a.add(a.newDate(n.drawDate), s, "m");
                this.showMonth(t, o.getFullYear(), o.getMonth() + 1)
            }
        },
        changeDay: function(t, s) {
            var n = this._getInst(t);
            if (!e.isEmptyObject(n)) {
                var o = a.add(a.newDate(n.drawDate), s, "d");
                this.showMonth(t, o.getFullYear(), o.getMonth() + 1, o.getDate())
            }
        },
        _checkMinMax: function(e, t) {
            var s = t.get("minDate"),
                n = t.get("maxDate");
            return e = s && e.getTime() < s.getTime() ? a.newDate(s) : e, e = n && e.getTime() > n.getTime() ? a.newDate(n) : e
        },
        retrieveDate: function(t, a) {
            var s = this._getInst(t);
            return e.isEmptyObject(s) ? null : this._normaliseDate(new Date(parseInt(a.className.replace(/^.*dp(-?\d+).*$/, "$1"), 10)))
        },
        selectDate: function(t, s) {
            var n = this._getInst(t);
            if (!e.isEmptyObject(n) && !this.isDisabled(t)) {
                var o = this.retrieveDate(t, s);
                if (n.options.multiSelect)
                    if ("depDatePicker" == t.id) {
                        for (var i = !1, r = 0; r < n.selectedDates.length; r++)
                            if (o.getTime() === n.selectedDates[r].getTime()) {
                                n.selectedDates.splice(r, 1), i = !0;
                                break
                            } i || n.selectedDates.push(o)
                    } else {
                        var l = n.selectedDates.length === n.options.multiSelect,
                            d = n.selectedDates.length > 0 && o.getTime() < n.selectedDates[n.selectedDates.length - 1].getTime();
                        l || d ? (n.selectedDates = [], n.selectedDates[0] = o) : l || n.selectedDates.push(o)
                    }
                else n.options.rangeSelect ? (n.pickingRange ? n.selectedDates[1] = o : n.selectedDates = [o, o], n.pickingRange = !n.pickingRange) : n.selectedDates = [o];
                n.prevDate = n.drawDate = a.newDate(), this._updateInput(t), n.inline || n.pickingRange || n.selectedDates.length < (n.options.multiSelect || (n.options.rangeSelect ? 2 : 1)) ? this._update(t) : this.hide(t)
            }
        },
        _generateContent: function(t, s) {
            function n() {
                (s.inline ? e(this).closest("." + g._getMarker()) : s.div).find(s.options.renderer.daySelector + " a").removeClass(s.options.renderer.highlightedClass)
            }
            var o = s.options.monthsToShow;
            o = e.isArray(o) ? o : [1, o], s.drawDate = this._checkMinMax(s.drawDate || s.get("defaultDate") || a.today(), s);
            for (var i = a._applyMonthsOffset(a.newDate(s.drawDate), s), r = "", l = 0; l < o[0]; l++) {
                for (var d = "", c = 0; c < o[1]; c++) d += this._generateMonth(t, s, i.getFullYear(), i.getMonth() + 1, s.options.renderer, 0 === l && 0 === c), a.add(i, 1, "m");
                r += this._prepare(s.options.renderer.monthRow, s).replace(/\{months\}/, d)
            }
            var h = this._prepare(s.options.renderer.picker, s).replace(/\{months\}/, r).replace(/\{weekHeader\}/g, this._generateDayHeaders(s, s.options.renderer)),
                u = function(e, n, o, i, r) {
                    if (-1 !== h.indexOf("{" + e + ":" + i + "}")) {
                        var l = s.options.commands[i],
                            d = s.options.commandsAsDateFormat ? l.date.apply(t, [s]) : null;
                        h = h.replace(new RegExp("\\{" + e + ":" + i + "\\}", "g"), "<" + n + (l.status ? ' title="' + s.options[l.status] + '"' : "") + ' class="' + s.options.renderer.commandClass + " " + s.options.renderer.commandClass + "-" + i + " " + r + (l.enabled(s) ? "" : " " + s.options.renderer.disabledClass) + '">' + (d ? a.formatDate(s.options[l.text], d, s.getConfig()) : s.options[l.text]) + "</" + o + ">")
                    }
                };
            for (var p in s.options.commands) u("button", 'button type="button"', "button", p, s.options.renderer.commandButtonClass), u("link", 'a href="javascript:void(0)"', "a", p, s.options.renderer.commandLinkClass);
            if (h = e(h), o[1] > 1) {
                var m = 0;
                e(s.options.renderer.monthSelector, h).each(function() {
                    var t = ++m % o[1];
                    e(this).addClass(1 === t ? "first" : 0 === t ? "last" : "")
                })
            }
            var g = this;
            h.find(s.options.renderer.daySelector + " a").hover(function() {
                n.apply(this), e(this).addClass(s.options.renderer.highlightedClass)
            }, n).click(function() {
                g.selectDate(t, this)
            }).end().find("select." + this._monthYearClass + ":not(." + this._anyYearClass + ")").change(function() {
                var a = e(this).val().split("/");
                g.showMonth(t, parseInt(a[1], 10), parseInt(a[0], 10))
            }).end().find("select." + this._anyYearClass).click(function() {
                e(this).css("visibility", "hidden").next("input").css({
                    left: this.offsetLeft,
                    top: this.offsetTop,
                    width: this.offsetWidth,
                    height: this.offsetHeight
                }).show().focus()
            }).end().find("input." + g._monthYearClass).change(function() {
                try {
                    var a = parseInt(e(this).val(), 10);
                    a = isNaN(a) ? s.drawDate.getFullYear() : a, g.showMonth(t, a, s.drawDate.getMonth() + 1, s.drawDate.getDate())
                } catch (n) {
                    alert(n)
                }
            }).keydown(function(t) {
                13 === t.keyCode ? e(t.elem).change() : 27 === t.keyCode && (e(t.elem).hide().prev("select").css("visibility", "visible"), s.elem.focus())
            });
            var f = {
                elem: s.elem[0]
            };
            h.keydown(f, this._keyDown).keypress(f, this._keyPress).keyup(f, this._keyUp), h.find("." + s.options.renderer.commandClass).click(function() {
                if (!e(this).hasClass(s.options.renderer.disabledClass)) {
                    var n = this.className.replace(new RegExp("^.*" + s.options.renderer.commandClass + "-([^ ]+).*$"), "$1");
                    a.performAction(t, n)
                }
            }), s.options.isRTL && h.addClass(s.options.renderer.rtlClass), o[0] * o[1] > 1 && h.addClass(s.options.renderer.multiClass), s.options.pickerClass && h.addClass(s.options.pickerClass), e("body").append(h);
            var y = 0;
            return h.find(s.options.renderer.monthSelector).each(function() {
                y += e(this).outerWidth()
            }), h.width(y / o[0]), e.isFunction(s.options.onShow) && s.options.onShow.apply(t, [h, s]), h
        },
        _generateMonth: function(t, s, n, o, i, r) {
            var l = a.daysInMonth(n, o),
                d = s.options.monthsToShow;
            d = e.isArray(d) ? d : [1, d];
            var c = s.options.fixedWeeks || d[0] * d[1] > 1;
            "mobile" === s.options.platForm && (c = !1);
            var h = s.options.firstDay,
                u = (a.newDate(n, o, 1).getDay() - h + 7) % 7,
                p = c ? 6 : Math.ceil((u + l) / 7),
                m = s.options.selectOtherMonths && s.options.showOtherMonths,
                g = s.pickingRange ? s.selectedDates[0] : s.get("minDate"),
                f = s.get("maxDate"),
                y = i.week.indexOf("{weekOfYear}") > -1,
                D = a.today(),
                v = a.newDate(n, o, 1);
            a.add(v, -u - (c && v.getDay() === h ? 7 : 0), "d");
            for (var w = v.getTime(), k = "", _ = e("[role=itinFlg].on").attr("data-type"), C = s.selectedDates.length, T = 0; p > T; T++) {
                for (var M = y ? '<span class="dp' + w + '">' + (e.isFunction(s.options.calculateWeek) ? s.options.calculateWeek(v) : 0) + "</span>" : "", b = "", S = 0; 7 > S; S++) {
                    var x = !1,
                        F = !1,
                        O = !1,
                        I = !1,
                        Y = !1,
                        N = !1,
                        A = !1,
                        W = !1,
                        R = !1;
                    if ((s.options.rangeSelect || s.options.multiSelect) && s.selectedDates.length > 0) "depDatePicker" == t.id ? (x = s.selectedDates.toString().indexOf(v.toString()) >= 0, x && (R = !0)) : (x = v.getTime() >= s.selectedDates[0] && v.getTime() <= s.selectedDates[s.selectedDates.length - 1], x && (v.getTime() === s.selectedDates[0].getTime() && ("RT" === _ ? O = !0 : Y = !0),
                        C > 1 && v.getTime() === s.selectedDates[1].getTime() && ("RT" === _ ? I = !0 : N = !0), C > 2 && v.getTime() === s.selectedDates[2].getTime() && (A = !0), C > 3 && v.getTime() === s.selectedDates[3].getTime() && (W = !0)));
                    else
                        for (var K = 0; K < s.selectedDates.length; K++)
                            if (s.selectedDates[K].getTime() === v.getTime()) {
                                F = !0;
                                break
                            } var E = e.isFunction(s.options.onDate) ? s.options.onDate.apply(t, [v, v.getMonth() + 1 === o]) : {},
                        J = (m || v.getMonth() + 1 === o) && this._isSelectable(t, v, E.selectable, g, f);
                    

                    var dayText = this._prepare(i.day, s).replace(/\{day\}/g, (J ? '<a href="javascript:void(0)"' : "<span") + ' class="dp' + w + " " + (E.dateClass || "") + (F || O || I || Y || N || A || W || R || !x || !m && v.getMonth() + 1 !== o ? "" : " " + i.selectedClass) + (J ? " " + i.defaultClass : " " + s.options.renderer.disabledClass) + (6 === v.getDay() ? " " + i.saturdayClass : "") + (0 === v.getDay() ? " " + i.sundayClass : "") + (v.getMonth() + 1 === o ? "" : " " + i.otherMonthClass) + (v.getTime() === D.getTime() && v.getMonth() + 1 === o ? " " + i.todayClass : "") + (J && (F || Y || N || A || W || O && I || R) ? " " + i.middleClass : "") + (J && O && !I ? " " + i.startClass : "") + (J && I && !O ? " " + i.endClass : "") + (v.getTime() === s.drawDate.getTime() && v.getMonth() + 1 === o ? " " + i.highlightedClass : "") + '"' + (E.title || s.options.dayStatus && J ? ' title="' + (E.title || a.formatDate(s.options.dayStatus, v, s.getConfig())) + '"' : "") + ">" + (s.options.showOtherMonths || v.getMonth() + 1 === o ? E.content || v.getDate() : "&#160;") + (J ? "</a>" : "</span>") + (v.getTime() !== D.getTime() || v.getMonth() + 1 !== o || F || O || I || Y || N || A || W || R ? "" : '<div class="txt"></div>') + (J && (F || O && !I) ? '<div class="txt">가는날</div>' : "") + (J && !O && I ? '<div class="txt">오는날</div>' : "") + (!J || !Y || N || A || W ? "" : '<div class="txt">여정1</div>') + (!J || Y || !N || A || W ? "" : '<div class="txt">여정2<div>') + (!J || Y || N || !A || W ? "" : '<div class="txt">여정3</div>') + (!J || Y || N || A || !W ? "" : '<div class="txt">여정4</div>') + (J && Y && N && !A && !W ? '<div class="txt">여정1/2</div>' : "") + (J && Y && N && A && !W ? '<div class="txt">여정1/2/3</div>' : "") + (J && Y && N && A && W ? '<div class="txt">여정 전체</div>' : "") + (J && !Y && N && A && !W ? '<div class="txt">여정2/3</div>' : "") + (J && !Y && N && A && W ? '<div class="txt">여정2/3/4</div>' : "") + (J && !Y && !N && A && W ? '<div class="txt">여정3/4</div>' : "") + (J && O && I ? '<div class="txt">당일</div>' : "") + (J && R ? '<div class="txt">가는날</div>' : ""));
                    if(initFormCodeFlg == "RT") {
                        dayText = dayText.replace(/여정1/g, '가는날');
                        dayText = dayText.replace(/여정2/g, '오는날');
                    }
                    b += dayText, a.add(v, 1, "d"), w = v.getTime()

                }
                k += this._prepare(i.week, s).replace(/\{days\}/g, b).replace(/\{weekOfYear\}/g, M)
            }
            var j = this._prepare(i.month, s).match(/\{monthHeader(:[^\}]+)?\}/);
            j = j[0].length <= 13 ? "MM yyyy" : j[0].substring(13, j[0].length - 1), j = r ? this._generateMonthSelection(s, n, o, g, f, j, i) : a.formatDate(j, a.newDate(n, o, 1), s.getConfig());
            var H = this._prepare(i.weekHeader, s).replace(/\{days\}/g, this._generateDayHeaders(s, i));
            return this._prepare(i.month, s).replace(/\{monthHeader(:[^\}]+)?\}/g, j).replace(/\{weekHeader\}/g, H).replace(/\{weeks\}/g, k)
        },
        _generateDayHeaders: function(e, t) {
            for (var a = "", s = 0; 7 > s; s++) {
                var n = (s + e.options.firstDay) % 7;
                a += this._prepare(t.dayHeader, e).replace(/\{day\}/g, '<span class="' + this._curDoWClass + n + '" title="' + e.options.dayNames[n] + '">' + e.options.dayNamesMin[n] + "</span>")
            }
            return a
        },
        _generateMonthSelection: function(e, t, s, n, o, i) {
            if (!e.options.changeMonth) return a.formatDate(i, a.newDate(t, s, 1), e.getConfig());
            for (var r = e.options["monthNames" + (i.match(/mm/i) ? "" : "Short")], l = i.replace(/m+/i, "\\x2E").replace(/y+/i, "\\x2F"), d = '<select class="' + this._monthYearClass + '" title="' + e.options.monthStatus + '">', c = 1; 12 >= c; c++)(!n || a.newDate(t, c, a.daysInMonth(t, c)).getTime() >= n.getTime()) && (!o || a.newDate(t, c, 1).getTime() <= o.getTime()) && (d += '<option value="' + c + "/" + t + '"' + (s === c ? ' selected="selected"' : "") + ">" + r[c - 1] + "</option>");
            d += "</select>", l = l.replace(/\\x2E/, d);
            var h = e.options.yearRange;
            if ("any" === h) d = '<select class="' + this._monthYearClass + " " + this._anyYearClass + '" title="' + e.options.yearStatus + '"><option>' + t + '</option></select><input class="' + this._monthYearClass + " " + this._curMonthClass + s + '" value="' + t + '">';
            else {
                h = h.split(":");
                var u = a.today().getFullYear(),
                    p = h[0].match("c[+-].*") ? t + parseInt(h[0].substring(1), 10) : (h[0].match("[+-].*") ? u : 0) + parseInt(h[0], 10),
                    m = h[1].match("c[+-].*") ? t + parseInt(h[1].substring(1), 10) : (h[1].match("[+-].*") ? u : 0) + parseInt(h[1], 10);
                d = '<select class="' + this._monthYearClass + '" title="' + e.options.yearStatus + '">', p = a.add(a.newDate(p + 1, 1, 1), -1, "d"), m = a.newDate(m, 1, 1);
                var g = function(e, a) {
                    0 !== e && (d += '<option value="' + s + "/" + e + '"' + (t === e ? ' selected="selected"' : "") + ">" + (a || e) + "</option>")
                };
                if (p.getTime() < m.getTime()) {
                    p = (n && n.getTime() > p.getTime() ? n : p).getFullYear(), m = (o && o.getTime() < m.getTime() ? o : m).getFullYear();
                    var f = Math.floor((m - p) / 2);
                    (!n || n.getFullYear() < p) && g(p - f, e.options.earlierText);
                    for (var y = p; m >= y; y++) g(y);
                    (!o || o.getFullYear() > m) && g(m + f, e.options.laterText)
                } else {
                    p = (o && o.getTime() < p.getTime() ? o : p).getFullYear(), m = (n && n.getTime() > m.getTime() ? n : m).getFullYear();
                    var f = Math.floor((p - m) / 2);
                    (!o || o.getFullYear() > p) && g(p + f, e.options.earlierText);
                    for (var y = p; y >= m; y--) g(y);
                    (!n || n.getFullYear() < m) && g(m - f, e.options.laterText)
                }
                d += "</select>"
            }
            return l = l.replace(/\\x2F/, d)
        },
        _prepare: function(e, t) {
            var a = function(t, a) {
                for (;;) {
                    var s = e.indexOf("{" + t + ":start}");
                    if (-1 === s) return;
                    var n = e.substring(s).indexOf("{" + t + ":end}");
                    n > -1 && (e = e.substring(0, s) + (a ? e.substr(s + t.length + 8, n - t.length - 8) : "") + e.substring(s + n + t.length + 6))
                }
            };
            a("inline", t.inline), a("popup", !t.inline);
            for (var s = /\{l10n:([^\}]+)\}/, n = null; n = s.exec(e);) e = e.replace(n[0], t.options[n[1]]);
            return e
        }
    });
    var a = e.datepick;
    e(function() {
        e(document).on("mousedown." + t, a._checkExternalClick).on("resize." + t, function() {
            a.hide(a.curInst)
        })
    })
}(jQuery);